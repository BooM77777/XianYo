package com.project.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommentDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public CommentDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCommentidIsNull() {
            addCriterion("commentID is null");
            return (Criteria) this;
        }

        public Criteria andCommentidIsNotNull() {
            addCriterion("commentID is not null");
            return (Criteria) this;
        }

        public Criteria andCommentidEqualTo(Long value) {
            addCriterion("commentID =", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotEqualTo(Long value) {
            addCriterion("commentID <>", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidGreaterThan(Long value) {
            addCriterion("commentID >", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidGreaterThanOrEqualTo(Long value) {
            addCriterion("commentID >=", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidLessThan(Long value) {
            addCriterion("commentID <", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidLessThanOrEqualTo(Long value) {
            addCriterion("commentID <=", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidIn(List<Long> values) {
            addCriterion("commentID in", values, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotIn(List<Long> values) {
            addCriterion("commentID not in", values, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidBetween(Long value1, Long value2) {
            addCriterion("commentID between", value1, value2, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotBetween(Long value1, Long value2) {
            addCriterion("commentID not between", value1, value2, "commentid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("userID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("userID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("userID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("userID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("userID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("userID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("userID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("userID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("userID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("userID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridIsNull() {
            addCriterion("commentUserID is null");
            return (Criteria) this;
        }

        public Criteria andCommentuseridIsNotNull() {
            addCriterion("commentUserID is not null");
            return (Criteria) this;
        }

        public Criteria andCommentuseridEqualTo(Long value) {
            addCriterion("commentUserID =", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridNotEqualTo(Long value) {
            addCriterion("commentUserID <>", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridGreaterThan(Long value) {
            addCriterion("commentUserID >", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridGreaterThanOrEqualTo(Long value) {
            addCriterion("commentUserID >=", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridLessThan(Long value) {
            addCriterion("commentUserID <", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridLessThanOrEqualTo(Long value) {
            addCriterion("commentUserID <=", value, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridIn(List<Long> values) {
            addCriterion("commentUserID in", values, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridNotIn(List<Long> values) {
            addCriterion("commentUserID not in", values, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridBetween(Long value1, Long value2) {
            addCriterion("commentUserID between", value1, value2, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andCommentuseridNotBetween(Long value1, Long value2) {
            addCriterion("commentUserID not between", value1, value2, "commentuserid");
            return (Criteria) this;
        }

        public Criteria andScenicidIsNull() {
            addCriterion("scenicID is null");
            return (Criteria) this;
        }

        public Criteria andScenicidIsNotNull() {
            addCriterion("scenicID is not null");
            return (Criteria) this;
        }

        public Criteria andScenicidEqualTo(Long value) {
            addCriterion("scenicID =", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotEqualTo(Long value) {
            addCriterion("scenicID <>", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidGreaterThan(Long value) {
            addCriterion("scenicID >", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidGreaterThanOrEqualTo(Long value) {
            addCriterion("scenicID >=", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidLessThan(Long value) {
            addCriterion("scenicID <", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidLessThanOrEqualTo(Long value) {
            addCriterion("scenicID <=", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidIn(List<Long> values) {
            addCriterion("scenicID in", values, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotIn(List<Long> values) {
            addCriterion("scenicID not in", values, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidBetween(Long value1, Long value2) {
            addCriterion("scenicID between", value1, value2, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotBetween(Long value1, Long value2) {
            addCriterion("scenicID not between", value1, value2, "scenicid");
            return (Criteria) this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("comment is null");
            return (Criteria) this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("comment is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEqualTo(String value) {
            addCriterion("comment =", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotEqualTo(String value) {
            addCriterion("comment <>", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThan(String value) {
            addCriterion("comment >", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(String value) {
            addCriterion("comment >=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThan(String value) {
            addCriterion("comment <", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThanOrEqualTo(String value) {
            addCriterion("comment <=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLike(String value) {
            addCriterion("comment like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotLike(String value) {
            addCriterion("comment not like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentIn(List<String> values) {
            addCriterion("comment in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotIn(List<String> values) {
            addCriterion("comment not in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentBetween(String value1, String value2) {
            addCriterion("comment between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotBetween(String value1, String value2) {
            addCriterion("comment not between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommenttimeIsNull() {
            addCriterion("commentTime is null");
            return (Criteria) this;
        }

        public Criteria andCommenttimeIsNotNull() {
            addCriterion("commentTime is not null");
            return (Criteria) this;
        }

        public Criteria andCommenttimeEqualTo(Date value) {
            addCriterion("commentTime =", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeNotEqualTo(Date value) {
            addCriterion("commentTime <>", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeGreaterThan(Date value) {
            addCriterion("commentTime >", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("commentTime >=", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeLessThan(Date value) {
            addCriterion("commentTime <", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeLessThanOrEqualTo(Date value) {
            addCriterion("commentTime <=", value, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeIn(List<Date> values) {
            addCriterion("commentTime in", values, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeNotIn(List<Date> values) {
            addCriterion("commentTime not in", values, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeBetween(Date value1, Date value2) {
            addCriterion("commentTime between", value1, value2, "commenttime");
            return (Criteria) this;
        }

        public Criteria andCommenttimeNotBetween(Date value1, Date value2) {
            addCriterion("commentTime not between", value1, value2, "commenttime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeIsNull() {
            addCriterion("praiseTime is null");
            return (Criteria) this;
        }

        public Criteria andPraisetimeIsNotNull() {
            addCriterion("praiseTime is not null");
            return (Criteria) this;
        }

        public Criteria andPraisetimeEqualTo(Integer value) {
            addCriterion("praiseTime =", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeNotEqualTo(Integer value) {
            addCriterion("praiseTime <>", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeGreaterThan(Integer value) {
            addCriterion("praiseTime >", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("praiseTime >=", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeLessThan(Integer value) {
            addCriterion("praiseTime <", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeLessThanOrEqualTo(Integer value) {
            addCriterion("praiseTime <=", value, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeIn(List<Integer> values) {
            addCriterion("praiseTime in", values, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeNotIn(List<Integer> values) {
            addCriterion("praiseTime not in", values, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeBetween(Integer value1, Integer value2) {
            addCriterion("praiseTime between", value1, value2, "praisetime");
            return (Criteria) this;
        }

        public Criteria andPraisetimeNotBetween(Integer value1, Integer value2) {
            addCriterion("praiseTime not between", value1, value2, "praisetime");
            return (Criteria) this;
        }

        public Criteria andReplyidIsNull() {
            addCriterion("replyID is null");
            return (Criteria) this;
        }

        public Criteria andReplyidIsNotNull() {
            addCriterion("replyID is not null");
            return (Criteria) this;
        }

        public Criteria andReplyidEqualTo(Long value) {
            addCriterion("replyID =", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidNotEqualTo(Long value) {
            addCriterion("replyID <>", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidGreaterThan(Long value) {
            addCriterion("replyID >", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidGreaterThanOrEqualTo(Long value) {
            addCriterion("replyID >=", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidLessThan(Long value) {
            addCriterion("replyID <", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidLessThanOrEqualTo(Long value) {
            addCriterion("replyID <=", value, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidIn(List<Long> values) {
            addCriterion("replyID in", values, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidNotIn(List<Long> values) {
            addCriterion("replyID not in", values, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidBetween(Long value1, Long value2) {
            addCriterion("replyID between", value1, value2, "replyid");
            return (Criteria) this;
        }

        public Criteria andReplyidNotBetween(Long value1, Long value2) {
            addCriterion("replyID not between", value1, value2, "replyid");
            return (Criteria) this;
        }

        public Criteria andJoyIsNull() {
            addCriterion("joy is null");
            return (Criteria) this;
        }

        public Criteria andJoyIsNotNull() {
            addCriterion("joy is not null");
            return (Criteria) this;
        }

        public Criteria andJoyEqualTo(Double value) {
            addCriterion("joy =", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyNotEqualTo(Double value) {
            addCriterion("joy <>", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyGreaterThan(Double value) {
            addCriterion("joy >", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyGreaterThanOrEqualTo(Double value) {
            addCriterion("joy >=", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyLessThan(Double value) {
            addCriterion("joy <", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyLessThanOrEqualTo(Double value) {
            addCriterion("joy <=", value, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyIn(List<Double> values) {
            addCriterion("joy in", values, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyNotIn(List<Double> values) {
            addCriterion("joy not in", values, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyBetween(Double value1, Double value2) {
            addCriterion("joy between", value1, value2, "joy");
            return (Criteria) this;
        }

        public Criteria andJoyNotBetween(Double value1, Double value2) {
            addCriterion("joy not between", value1, value2, "joy");
            return (Criteria) this;
        }

        public Criteria andSadIsNull() {
            addCriterion("sad is null");
            return (Criteria) this;
        }

        public Criteria andSadIsNotNull() {
            addCriterion("sad is not null");
            return (Criteria) this;
        }

        public Criteria andSadEqualTo(Double value) {
            addCriterion("sad =", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadNotEqualTo(Double value) {
            addCriterion("sad <>", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadGreaterThan(Double value) {
            addCriterion("sad >", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadGreaterThanOrEqualTo(Double value) {
            addCriterion("sad >=", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadLessThan(Double value) {
            addCriterion("sad <", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadLessThanOrEqualTo(Double value) {
            addCriterion("sad <=", value, "sad");
            return (Criteria) this;
        }

        public Criteria andSadIn(List<Double> values) {
            addCriterion("sad in", values, "sad");
            return (Criteria) this;
        }

        public Criteria andSadNotIn(List<Double> values) {
            addCriterion("sad not in", values, "sad");
            return (Criteria) this;
        }

        public Criteria andSadBetween(Double value1, Double value2) {
            addCriterion("sad between", value1, value2, "sad");
            return (Criteria) this;
        }

        public Criteria andSadNotBetween(Double value1, Double value2) {
            addCriterion("sad not between", value1, value2, "sad");
            return (Criteria) this;
        }

        public Criteria andFearIsNull() {
            addCriterion("fear is null");
            return (Criteria) this;
        }

        public Criteria andFearIsNotNull() {
            addCriterion("fear is not null");
            return (Criteria) this;
        }

        public Criteria andFearEqualTo(Double value) {
            addCriterion("fear =", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearNotEqualTo(Double value) {
            addCriterion("fear <>", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearGreaterThan(Double value) {
            addCriterion("fear >", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearGreaterThanOrEqualTo(Double value) {
            addCriterion("fear >=", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearLessThan(Double value) {
            addCriterion("fear <", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearLessThanOrEqualTo(Double value) {
            addCriterion("fear <=", value, "fear");
            return (Criteria) this;
        }

        public Criteria andFearIn(List<Double> values) {
            addCriterion("fear in", values, "fear");
            return (Criteria) this;
        }

        public Criteria andFearNotIn(List<Double> values) {
            addCriterion("fear not in", values, "fear");
            return (Criteria) this;
        }

        public Criteria andFearBetween(Double value1, Double value2) {
            addCriterion("fear between", value1, value2, "fear");
            return (Criteria) this;
        }

        public Criteria andFearNotBetween(Double value1, Double value2) {
            addCriterion("fear not between", value1, value2, "fear");
            return (Criteria) this;
        }

        public Criteria andAngerIsNull() {
            addCriterion("anger is null");
            return (Criteria) this;
        }

        public Criteria andAngerIsNotNull() {
            addCriterion("anger is not null");
            return (Criteria) this;
        }

        public Criteria andAngerEqualTo(Double value) {
            addCriterion("anger =", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerNotEqualTo(Double value) {
            addCriterion("anger <>", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerGreaterThan(Double value) {
            addCriterion("anger >", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerGreaterThanOrEqualTo(Double value) {
            addCriterion("anger >=", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerLessThan(Double value) {
            addCriterion("anger <", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerLessThanOrEqualTo(Double value) {
            addCriterion("anger <=", value, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerIn(List<Double> values) {
            addCriterion("anger in", values, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerNotIn(List<Double> values) {
            addCriterion("anger not in", values, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerBetween(Double value1, Double value2) {
            addCriterion("anger between", value1, value2, "anger");
            return (Criteria) this;
        }

        public Criteria andAngerNotBetween(Double value1, Double value2) {
            addCriterion("anger not between", value1, value2, "anger");
            return (Criteria) this;
        }

        public Criteria andDisgustIsNull() {
            addCriterion("disgust is null");
            return (Criteria) this;
        }

        public Criteria andDisgustIsNotNull() {
            addCriterion("disgust is not null");
            return (Criteria) this;
        }

        public Criteria andDisgustEqualTo(Double value) {
            addCriterion("disgust =", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustNotEqualTo(Double value) {
            addCriterion("disgust <>", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustGreaterThan(Double value) {
            addCriterion("disgust >", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustGreaterThanOrEqualTo(Double value) {
            addCriterion("disgust >=", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustLessThan(Double value) {
            addCriterion("disgust <", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustLessThanOrEqualTo(Double value) {
            addCriterion("disgust <=", value, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustIn(List<Double> values) {
            addCriterion("disgust in", values, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustNotIn(List<Double> values) {
            addCriterion("disgust not in", values, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustBetween(Double value1, Double value2) {
            addCriterion("disgust between", value1, value2, "disgust");
            return (Criteria) this;
        }

        public Criteria andDisgustNotBetween(Double value1, Double value2) {
            addCriterion("disgust not between", value1, value2, "disgust");
            return (Criteria) this;
        }

        public Criteria andSurpriseIsNull() {
            addCriterion("surprise is null");
            return (Criteria) this;
        }

        public Criteria andSurpriseIsNotNull() {
            addCriterion("surprise is not null");
            return (Criteria) this;
        }

        public Criteria andSurpriseEqualTo(Double value) {
            addCriterion("surprise =", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseNotEqualTo(Double value) {
            addCriterion("surprise <>", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseGreaterThan(Double value) {
            addCriterion("surprise >", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseGreaterThanOrEqualTo(Double value) {
            addCriterion("surprise >=", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseLessThan(Double value) {
            addCriterion("surprise <", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseLessThanOrEqualTo(Double value) {
            addCriterion("surprise <=", value, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseIn(List<Double> values) {
            addCriterion("surprise in", values, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseNotIn(List<Double> values) {
            addCriterion("surprise not in", values, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseBetween(Double value1, Double value2) {
            addCriterion("surprise between", value1, value2, "surprise");
            return (Criteria) this;
        }

        public Criteria andSurpriseNotBetween(Double value1, Double value2) {
            addCriterion("surprise not between", value1, value2, "surprise");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commentinfo_
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 08 10:01:11 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table commentinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}