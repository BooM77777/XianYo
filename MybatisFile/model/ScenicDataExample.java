package com.project.model;

import java.util.ArrayList;
import java.util.List;

public class ScenicDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public ScenicDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScenicidIsNull() {
            addCriterion("scenicID is null");
            return (Criteria) this;
        }

        public Criteria andScenicidIsNotNull() {
            addCriterion("scenicID is not null");
            return (Criteria) this;
        }

        public Criteria andScenicidEqualTo(Long value) {
            addCriterion("scenicID =", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotEqualTo(Long value) {
            addCriterion("scenicID <>", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidGreaterThan(Long value) {
            addCriterion("scenicID >", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidGreaterThanOrEqualTo(Long value) {
            addCriterion("scenicID >=", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidLessThan(Long value) {
            addCriterion("scenicID <", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidLessThanOrEqualTo(Long value) {
            addCriterion("scenicID <=", value, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidIn(List<Long> values) {
            addCriterion("scenicID in", values, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotIn(List<Long> values) {
            addCriterion("scenicID not in", values, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidBetween(Long value1, Long value2) {
            addCriterion("scenicID between", value1, value2, "scenicid");
            return (Criteria) this;
        }

        public Criteria andScenicidNotBetween(Long value1, Long value2) {
            addCriterion("scenicID not between", value1, value2, "scenicid");
            return (Criteria) this;
        }

        public Criteria andFoodIsNull() {
            addCriterion("food is null");
            return (Criteria) this;
        }

        public Criteria andFoodIsNotNull() {
            addCriterion("food is not null");
            return (Criteria) this;
        }

        public Criteria andFoodEqualTo(Float value) {
            addCriterion("food =", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodNotEqualTo(Float value) {
            addCriterion("food <>", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodGreaterThan(Float value) {
            addCriterion("food >", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodGreaterThanOrEqualTo(Float value) {
            addCriterion("food >=", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodLessThan(Float value) {
            addCriterion("food <", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodLessThanOrEqualTo(Float value) {
            addCriterion("food <=", value, "food");
            return (Criteria) this;
        }

        public Criteria andFoodIn(List<Float> values) {
            addCriterion("food in", values, "food");
            return (Criteria) this;
        }

        public Criteria andFoodNotIn(List<Float> values) {
            addCriterion("food not in", values, "food");
            return (Criteria) this;
        }

        public Criteria andFoodBetween(Float value1, Float value2) {
            addCriterion("food between", value1, value2, "food");
            return (Criteria) this;
        }

        public Criteria andFoodNotBetween(Float value1, Float value2) {
            addCriterion("food not between", value1, value2, "food");
            return (Criteria) this;
        }

        public Criteria andNiceIsNull() {
            addCriterion("nice is null");
            return (Criteria) this;
        }

        public Criteria andNiceIsNotNull() {
            addCriterion("nice is not null");
            return (Criteria) this;
        }

        public Criteria andNiceEqualTo(Float value) {
            addCriterion("nice =", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceNotEqualTo(Float value) {
            addCriterion("nice <>", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceGreaterThan(Float value) {
            addCriterion("nice >", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceGreaterThanOrEqualTo(Float value) {
            addCriterion("nice >=", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceLessThan(Float value) {
            addCriterion("nice <", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceLessThanOrEqualTo(Float value) {
            addCriterion("nice <=", value, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceIn(List<Float> values) {
            addCriterion("nice in", values, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceNotIn(List<Float> values) {
            addCriterion("nice not in", values, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceBetween(Float value1, Float value2) {
            addCriterion("nice between", value1, value2, "nice");
            return (Criteria) this;
        }

        public Criteria andNiceNotBetween(Float value1, Float value2) {
            addCriterion("nice not between", value1, value2, "nice");
            return (Criteria) this;
        }

        public Criteria andTrafficIsNull() {
            addCriterion("traffic is null");
            return (Criteria) this;
        }

        public Criteria andTrafficIsNotNull() {
            addCriterion("traffic is not null");
            return (Criteria) this;
        }

        public Criteria andTrafficEqualTo(Float value) {
            addCriterion("traffic =", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficNotEqualTo(Float value) {
            addCriterion("traffic <>", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficGreaterThan(Float value) {
            addCriterion("traffic >", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficGreaterThanOrEqualTo(Float value) {
            addCriterion("traffic >=", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficLessThan(Float value) {
            addCriterion("traffic <", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficLessThanOrEqualTo(Float value) {
            addCriterion("traffic <=", value, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficIn(List<Float> values) {
            addCriterion("traffic in", values, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficNotIn(List<Float> values) {
            addCriterion("traffic not in", values, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficBetween(Float value1, Float value2) {
            addCriterion("traffic between", value1, value2, "traffic");
            return (Criteria) this;
        }

        public Criteria andTrafficNotBetween(Float value1, Float value2) {
            addCriterion("traffic not between", value1, value2, "traffic");
            return (Criteria) this;
        }

        public Criteria andCulturalIsNull() {
            addCriterion("cultural is null");
            return (Criteria) this;
        }

        public Criteria andCulturalIsNotNull() {
            addCriterion("cultural is not null");
            return (Criteria) this;
        }

        public Criteria andCulturalEqualTo(Float value) {
            addCriterion("cultural =", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalNotEqualTo(Float value) {
            addCriterion("cultural <>", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalGreaterThan(Float value) {
            addCriterion("cultural >", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalGreaterThanOrEqualTo(Float value) {
            addCriterion("cultural >=", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalLessThan(Float value) {
            addCriterion("cultural <", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalLessThanOrEqualTo(Float value) {
            addCriterion("cultural <=", value, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalIn(List<Float> values) {
            addCriterion("cultural in", values, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalNotIn(List<Float> values) {
            addCriterion("cultural not in", values, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalBetween(Float value1, Float value2) {
            addCriterion("cultural between", value1, value2, "cultural");
            return (Criteria) this;
        }

        public Criteria andCulturalNotBetween(Float value1, Float value2) {
            addCriterion("cultural not between", value1, value2, "cultural");
            return (Criteria) this;
        }

        public Criteria andRecommendIsNull() {
            addCriterion("recommend is null");
            return (Criteria) this;
        }

        public Criteria andRecommendIsNotNull() {
            addCriterion("recommend is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendEqualTo(Float value) {
            addCriterion("recommend =", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendNotEqualTo(Float value) {
            addCriterion("recommend <>", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendGreaterThan(Float value) {
            addCriterion("recommend >", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendGreaterThanOrEqualTo(Float value) {
            addCriterion("recommend >=", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendLessThan(Float value) {
            addCriterion("recommend <", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendLessThanOrEqualTo(Float value) {
            addCriterion("recommend <=", value, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendIn(List<Float> values) {
            addCriterion("recommend in", values, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendNotIn(List<Float> values) {
            addCriterion("recommend not in", values, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendBetween(Float value1, Float value2) {
            addCriterion("recommend between", value1, value2, "recommend");
            return (Criteria) this;
        }

        public Criteria andRecommendNotBetween(Float value1, Float value2) {
            addCriterion("recommend not between", value1, value2, "recommend");
            return (Criteria) this;
        }

        public Criteria andTotalscoreIsNull() {
            addCriterion("totalScore is null");
            return (Criteria) this;
        }

        public Criteria andTotalscoreIsNotNull() {
            addCriterion("totalScore is not null");
            return (Criteria) this;
        }

        public Criteria andTotalscoreEqualTo(Float value) {
            addCriterion("totalScore =", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreNotEqualTo(Float value) {
            addCriterion("totalScore <>", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreGreaterThan(Float value) {
            addCriterion("totalScore >", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreGreaterThanOrEqualTo(Float value) {
            addCriterion("totalScore >=", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreLessThan(Float value) {
            addCriterion("totalScore <", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreLessThanOrEqualTo(Float value) {
            addCriterion("totalScore <=", value, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreIn(List<Float> values) {
            addCriterion("totalScore in", values, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreNotIn(List<Float> values) {
            addCriterion("totalScore not in", values, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreBetween(Float value1, Float value2) {
            addCriterion("totalScore between", value1, value2, "totalscore");
            return (Criteria) this;
        }

        public Criteria andTotalscoreNotBetween(Float value1, Float value2) {
            addCriterion("totalScore not between", value1, value2, "totalscore");
            return (Criteria) this;
        }

        public Criteria andGradenumberIsNull() {
            addCriterion("gradeNumber is null");
            return (Criteria) this;
        }

        public Criteria andGradenumberIsNotNull() {
            addCriterion("gradeNumber is not null");
            return (Criteria) this;
        }

        public Criteria andGradenumberEqualTo(Integer value) {
            addCriterion("gradeNumber =", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberNotEqualTo(Integer value) {
            addCriterion("gradeNumber <>", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberGreaterThan(Integer value) {
            addCriterion("gradeNumber >", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("gradeNumber >=", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberLessThan(Integer value) {
            addCriterion("gradeNumber <", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberLessThanOrEqualTo(Integer value) {
            addCriterion("gradeNumber <=", value, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberIn(List<Integer> values) {
            addCriterion("gradeNumber in", values, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberNotIn(List<Integer> values) {
            addCriterion("gradeNumber not in", values, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberBetween(Integer value1, Integer value2) {
            addCriterion("gradeNumber between", value1, value2, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andGradenumberNotBetween(Integer value1, Integer value2) {
            addCriterion("gradeNumber not between", value1, value2, "gradenumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberIsNull() {
            addCriterion("vpNumber is null");
            return (Criteria) this;
        }

        public Criteria andVpnumberIsNotNull() {
            addCriterion("vpNumber is not null");
            return (Criteria) this;
        }

        public Criteria andVpnumberEqualTo(Integer value) {
            addCriterion("vpNumber =", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberNotEqualTo(Integer value) {
            addCriterion("vpNumber <>", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberGreaterThan(Integer value) {
            addCriterion("vpNumber >", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("vpNumber >=", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberLessThan(Integer value) {
            addCriterion("vpNumber <", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberLessThanOrEqualTo(Integer value) {
            addCriterion("vpNumber <=", value, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberIn(List<Integer> values) {
            addCriterion("vpNumber in", values, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberNotIn(List<Integer> values) {
            addCriterion("vpNumber not in", values, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberBetween(Integer value1, Integer value2) {
            addCriterion("vpNumber between", value1, value2, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andVpnumberNotBetween(Integer value1, Integer value2) {
            addCriterion("vpNumber not between", value1, value2, "vpnumber");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidIsNull() {
            addCriterion("scenicSurroundInfoID is null");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidIsNotNull() {
            addCriterion("scenicSurroundInfoID is not null");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidEqualTo(Integer value) {
            addCriterion("scenicSurroundInfoID =", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidNotEqualTo(Integer value) {
            addCriterion("scenicSurroundInfoID <>", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidGreaterThan(Integer value) {
            addCriterion("scenicSurroundInfoID >", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidGreaterThanOrEqualTo(Integer value) {
            addCriterion("scenicSurroundInfoID >=", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidLessThan(Integer value) {
            addCriterion("scenicSurroundInfoID <", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidLessThanOrEqualTo(Integer value) {
            addCriterion("scenicSurroundInfoID <=", value, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidIn(List<Integer> values) {
            addCriterion("scenicSurroundInfoID in", values, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidNotIn(List<Integer> values) {
            addCriterion("scenicSurroundInfoID not in", values, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidBetween(Integer value1, Integer value2) {
            addCriterion("scenicSurroundInfoID between", value1, value2, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicsurroundinfoidNotBetween(Integer value1, Integer value2) {
            addCriterion("scenicSurroundInfoID not between", value1, value2, "scenicsurroundinfoid");
            return (Criteria) this;
        }

        public Criteria andScenicurlIsNull() {
            addCriterion("scenicUrl is null");
            return (Criteria) this;
        }

        public Criteria andScenicurlIsNotNull() {
            addCriterion("scenicUrl is not null");
            return (Criteria) this;
        }

        public Criteria andScenicurlEqualTo(String value) {
            addCriterion("scenicUrl =", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlNotEqualTo(String value) {
            addCriterion("scenicUrl <>", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlGreaterThan(String value) {
            addCriterion("scenicUrl >", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlGreaterThanOrEqualTo(String value) {
            addCriterion("scenicUrl >=", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlLessThan(String value) {
            addCriterion("scenicUrl <", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlLessThanOrEqualTo(String value) {
            addCriterion("scenicUrl <=", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlLike(String value) {
            addCriterion("scenicUrl like", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlNotLike(String value) {
            addCriterion("scenicUrl not like", value, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlIn(List<String> values) {
            addCriterion("scenicUrl in", values, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlNotIn(List<String> values) {
            addCriterion("scenicUrl not in", values, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlBetween(String value1, String value2) {
            addCriterion("scenicUrl between", value1, value2, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andScenicurlNotBetween(String value1, String value2) {
            addCriterion("scenicUrl not between", value1, value2, "scenicurl");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberIsNull() {
            addCriterion("validVPNumber is null");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberIsNotNull() {
            addCriterion("validVPNumber is not null");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberEqualTo(Long value) {
            addCriterion("validVPNumber =", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberNotEqualTo(Long value) {
            addCriterion("validVPNumber <>", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberGreaterThan(Long value) {
            addCriterion("validVPNumber >", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberGreaterThanOrEqualTo(Long value) {
            addCriterion("validVPNumber >=", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberLessThan(Long value) {
            addCriterion("validVPNumber <", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberLessThanOrEqualTo(Long value) {
            addCriterion("validVPNumber <=", value, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberIn(List<Long> values) {
            addCriterion("validVPNumber in", values, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberNotIn(List<Long> values) {
            addCriterion("validVPNumber not in", values, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberBetween(Long value1, Long value2) {
            addCriterion("validVPNumber between", value1, value2, "validvpnumber");
            return (Criteria) this;
        }

        public Criteria andValidvpnumberNotBetween(Long value1, Long value2) {
            addCriterion("validVPNumber not between", value1, value2, "validvpnumber");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scenicinfo_
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 08 10:01:11 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table scenicinfo_
     *
     * @mbggenerated Fri Sep 08 10:01:11 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}