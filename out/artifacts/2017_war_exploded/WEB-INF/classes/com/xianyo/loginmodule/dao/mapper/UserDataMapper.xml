<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xianyo.loginmodule.dao.mapper.UserDataMapper" >
  <resultMap id="BaseResultMap" type="com.xianyo.loginmodule.dao.pojo.UserData" >
    <id column="userID" property="userid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="allowGetLocation" property="allowgetlocation" jdbcType="BIT" />
    <result column="headshot" property="headshot" jdbcType="VARCHAR" />
    <result column="fansNumber" property="fansnumber" jdbcType="INTEGER" />
    <result column="concernNumber" property="concernnumber" jdbcType="INTEGER" />
    <result column="microblogNumber" property="microblognumber" jdbcType="INTEGER" />
    <result column="answerNumber" property="answernumber" jdbcType="INTEGER" />
    <result column="questionNumber" property="questionnumber" jdbcType="INTEGER" />
    <result column="newAnswers" property="newanswers" jdbcType="INTEGER" />
    <result column="selfIntroduce" property="selfintroduce" jdbcType="VARCHAR" />
    <result column="indexUrl" property="indexurl" jdbcType="VARCHAR" />
    <result column="islogin" property="islogin" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userID, username, password, phonenumber, email, sex, allowGetLocation, headshot, 
    fansNumber, concernNumber, microblogNumber, answerNumber, questionNumber, newAnswers, 
    selfIntroduce, indexUrl, islogin
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="com.xianyo.loginmodule.dao.mapper.UserDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from userinfo_
    where userID = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from userinfo_
    where userID = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample"
          parameterType="com.xianyo.loginmodule.dao.mapper.UserDataExample" >
    delete from userinfo_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xianyo.loginmodule.dao.pojo.UserData" >
    insert into userinfo_ (userID, username, password, 
      phonenumber, email, sex, 
      allowGetLocation, headshot, fansNumber, 
      concernNumber, microblogNumber, answerNumber, 
      questionNumber, newAnswers, selfIntroduce, 
      indexUrl, islogin)
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phonenumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{allowgetlocation,jdbcType=BIT}, #{headshot,jdbcType=VARCHAR}, #{fansnumber,jdbcType=INTEGER}, 
      #{concernnumber,jdbcType=INTEGER}, #{microblognumber,jdbcType=INTEGER}, #{answernumber,jdbcType=INTEGER}, 
      #{questionnumber,jdbcType=INTEGER}, #{newanswers,jdbcType=INTEGER}, #{selfintroduce,jdbcType=VARCHAR}, 
      #{indexurl,jdbcType=VARCHAR}, #{islogin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xianyo.loginmodule.dao.pojo.UserData" >
    insert into userinfo_
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phonenumber != null" >
        phonenumber,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="allowgetlocation != null" >
        allowGetLocation,
      </if>
      <if test="headshot != null" >
        headshot,
      </if>
      <if test="fansnumber != null" >
        fansNumber,
      </if>
      <if test="concernnumber != null" >
        concernNumber,
      </if>
      <if test="microblognumber != null" >
        microblogNumber,
      </if>
      <if test="answernumber != null" >
        answerNumber,
      </if>
      <if test="questionnumber != null" >
        questionNumber,
      </if>
      <if test="newanswers != null" >
        newAnswers,
      </if>
      <if test="selfintroduce != null" >
        selfIntroduce,
      </if>
      <if test="indexurl != null" >
        indexUrl,
      </if>
      <if test="islogin != null" >
        islogin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="allowgetlocation != null" >
        #{allowgetlocation,jdbcType=BIT},
      </if>
      <if test="headshot != null" >
        #{headshot,jdbcType=VARCHAR},
      </if>
      <if test="fansnumber != null" >
        #{fansnumber,jdbcType=INTEGER},
      </if>
      <if test="concernnumber != null" >
        #{concernnumber,jdbcType=INTEGER},
      </if>
      <if test="microblognumber != null" >
        #{microblognumber,jdbcType=INTEGER},
      </if>
      <if test="answernumber != null" >
        #{answernumber,jdbcType=INTEGER},
      </if>
      <if test="questionnumber != null" >
        #{questionnumber,jdbcType=INTEGER},
      </if>
      <if test="newanswers != null" >
        #{newanswers,jdbcType=INTEGER},
      </if>
      <if test="selfintroduce != null" >
        #{selfintroduce,jdbcType=VARCHAR},
      </if>
      <if test="indexurl != null" >
        #{indexurl,jdbcType=VARCHAR},
      </if>
      <if test="islogin != null" >
        #{islogin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample"
          parameterType="com.xianyo.loginmodule.dao.mapper.UserDataExample"
          resultType="java.lang.Integer" >
    select count(*) from userinfo_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userinfo_
    <set >
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null" >
        phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.allowgetlocation != null" >
        allowGetLocation = #{record.allowgetlocation,jdbcType=BIT},
      </if>
      <if test="record.headshot != null" >
        headshot = #{record.headshot,jdbcType=VARCHAR},
      </if>
      <if test="record.fansnumber != null" >
        fansNumber = #{record.fansnumber,jdbcType=INTEGER},
      </if>
      <if test="record.concernnumber != null" >
        concernNumber = #{record.concernnumber,jdbcType=INTEGER},
      </if>
      <if test="record.microblognumber != null" >
        microblogNumber = #{record.microblognumber,jdbcType=INTEGER},
      </if>
      <if test="record.answernumber != null" >
        answerNumber = #{record.answernumber,jdbcType=INTEGER},
      </if>
      <if test="record.questionnumber != null" >
        questionNumber = #{record.questionnumber,jdbcType=INTEGER},
      </if>
      <if test="record.newanswers != null" >
        newAnswers = #{record.newanswers,jdbcType=INTEGER},
      </if>
      <if test="record.selfintroduce != null" >
        selfIntroduce = #{record.selfintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.indexurl != null" >
        indexUrl = #{record.indexurl,jdbcType=VARCHAR},
      </if>
      <if test="record.islogin != null" >
        islogin = #{record.islogin,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userinfo_
    set userID = #{record.userid,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      allowGetLocation = #{record.allowgetlocation,jdbcType=BIT},
      headshot = #{record.headshot,jdbcType=VARCHAR},
      fansNumber = #{record.fansnumber,jdbcType=INTEGER},
      concernNumber = #{record.concernnumber,jdbcType=INTEGER},
      microblogNumber = #{record.microblognumber,jdbcType=INTEGER},
      answerNumber = #{record.answernumber,jdbcType=INTEGER},
      questionNumber = #{record.questionnumber,jdbcType=INTEGER},
      newAnswers = #{record.newanswers,jdbcType=INTEGER},
      selfIntroduce = #{record.selfintroduce,jdbcType=VARCHAR},
      indexUrl = #{record.indexurl,jdbcType=VARCHAR},
      islogin = #{record.islogin,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective"
          parameterType="com.xianyo.loginmodule.dao.pojo.UserData" >
    update userinfo_
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="allowgetlocation != null" >
        allowGetLocation = #{allowgetlocation,jdbcType=BIT},
      </if>
      <if test="headshot != null" >
        headshot = #{headshot,jdbcType=VARCHAR},
      </if>
      <if test="fansnumber != null" >
        fansNumber = #{fansnumber,jdbcType=INTEGER},
      </if>
      <if test="concernnumber != null" >
        concernNumber = #{concernnumber,jdbcType=INTEGER},
      </if>
      <if test="microblognumber != null" >
        microblogNumber = #{microblognumber,jdbcType=INTEGER},
      </if>
      <if test="answernumber != null" >
        answerNumber = #{answernumber,jdbcType=INTEGER},
      </if>
      <if test="questionnumber != null" >
        questionNumber = #{questionnumber,jdbcType=INTEGER},
      </if>
      <if test="newanswers != null" >
        newAnswers = #{newanswers,jdbcType=INTEGER},
      </if>
      <if test="selfintroduce != null" >
        selfIntroduce = #{selfintroduce,jdbcType=VARCHAR},
      </if>
      <if test="indexurl != null" >
        indexUrl = #{indexurl,jdbcType=VARCHAR},
      </if>
      <if test="islogin != null" >
        islogin = #{islogin,jdbcType=BIT},
      </if>
    </set>
    where userID = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey"
          parameterType="com.xianyo.loginmodule.dao.pojo.UserData" >
    update userinfo_
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      allowGetLocation = #{allowgetlocation,jdbcType=BIT},
      headshot = #{headshot,jdbcType=VARCHAR},
      fansNumber = #{fansnumber,jdbcType=INTEGER},
      concernNumber = #{concernnumber,jdbcType=INTEGER},
      microblogNumber = #{microblognumber,jdbcType=INTEGER},
      answerNumber = #{answernumber,jdbcType=INTEGER},
      questionNumber = #{questionnumber,jdbcType=INTEGER},
      newAnswers = #{newanswers,jdbcType=INTEGER},
      selfIntroduce = #{selfintroduce,jdbcType=VARCHAR},
      indexUrl = #{indexurl,jdbcType=VARCHAR},
      islogin = #{islogin,jdbcType=BIT}
    where userID = #{userid,jdbcType=BIGINT}
  </update>
</mapper>